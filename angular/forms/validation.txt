You can use the Validator service or make your own:

import {AbstractControl, FormBuilder, FormGroup, Validators} from "@angular/forms";

  constructor(private formBuilder: FormBuilder,
              private validatorService: ValidatorService) {
  }

Add to FormGroup object:

    this.myForm = this.formBuilder.group({
      actionType: [null, Validators.required],
      orderType:  [null, Validators.required],
      limitPrice: [null, null],
      quantity:   [null, [Validators.required, this.validatorService.isNumericValidator()]],
      symbol:     [null, [Validators.required, this.validatorService.whiteSpaceValidator()]]
    });



Custom Validation in directive: https://angular.dev/guide/forms/form-validation

  public isNumericValidator(): ValidatorFn {

    return (control: AbstractControl) => {

      if (!control) {
        // form is being initialized so do nothing
        return null;
      }

      let enteredText: string = control.value;

      if (!enteredText) {
        //user has not entered text
        return {'isNumeric' : 'This is a required field'}
      }

      if (enteredText.match(/^[0-9]+$/)) {
        return null;
      } else {
        return {'isNumeric' : 'This is not a valid number'}
      }

    }
  } // end of isNumericValidator

      this.myForm = this.formBuilder.group({
        reportName: [null,null],
        source: [null,null],
        priority: [null,null],
        classification: [null,null],
        authors: [null,null],
        description: [null, [ this.validatorService.whiteSpaceValidator(), Validators.minLength(5)]],
      });
      }