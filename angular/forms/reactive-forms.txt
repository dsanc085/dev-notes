TS File:
1. Import and add service formBuilder:
    constructor(private formBuilder: FormBuilder)
2. Add class variable form:
    public myForm: FormGroup;
3. Initialize variable, where first item is value of formControlName in HTML file. 2nd item in array is Validator
    this.myForm = this.formBuilder.group({
      actionType: [null, Validators.required],
      orderType:  [null, Validators.required],
      limitPrice: [null, null],
      quantity:   [null, this.validatorService.whiteSpaceValidator()],
      symbol:     [null, this.validatorService.whiteSpaceValidator()]
    });
4. Create this in the html file:
    a. <form [formGroup]="this.myForm" novalidate autocomplete="off">
    b. <mat-form-field subscriptSizing="dynamic">
            <mat-label>Label</mat-label>
            <!-- Insert proper mat field -->
            <mat-error>Message</mat-error>
       </mat-form-field>
5. For form fields:
    a. Select: <mat-select formControlName="ActionType">
                    <mat-option [value]=>Option 1</mat-option>
               </mat-select>
    b. Text Box: <input type="text" matInput />
6. To reset form, in ts file:
    a. this.myForm.reset();
7. To access form fields:
this.myForm.controls.contractPriority.setValue(102);
<pre>
  contractName: {{this.myForm.controls.contractName.value}}
  contractPriority: {{this.myForm.controls.contractPriority.value}}
  contractFundingDate: {{this.myForm.controls.contractFundingDate.value}}
  contractStartDate: {{this.myForm.controls.contractStartDate.value}}
  contractStartDateErrors: {{this.myForm.controls.contractStartDate.errors | json}}
  contractEndDate: {{this.myForm.controls.contractEndDate.value}}
  contractEndDateErrors: {{this.myForm.controls.contractEndDate.errors | json}}
</pre>
8. Form validation:
 this.myForm.markAllAsTouched();

   public constructor(private formBuilder: FormBuilder,
                      private messageService: MessageService) {

   }
   public clickSave(): void {

     // Touching all forms to show any errors
     this.myForm.markAllAsTouched();

     if (!this.myForm.valid) {
       // There are errors in form so let the user know
       return;
     }

     this.messageService.showSuccessMessage("Contract Successfully Added");

     this.myForm.reset();

   }

